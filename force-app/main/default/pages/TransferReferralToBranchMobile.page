<apex:page standardController="RTL_Referral__c" extensions="TransferToBranchExtension"
id="thePage" applybodytag="false" sidebar="false" standardstylesheets="true" doctype="html-5.0" showHeader="false" action="{!ValidateReferral}" >

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <apex:stylesheet value="{!URLFOR($Resource.bootstrapsf1, 'dist/css/bootstrap-namespaced.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.boostrapex)}"/>  
    <apex:includeScript value="{!URLFOR($Resource.TMBjquery, '/TMBassets/jquery/jquery-2.0.0.min.js')}"  />
    <apex:includescript value="{!$Resource.AccountPlan_Bootstrap}" />
     <apex:actionStatus onstart="startLoading();" onstop="endLoading();" id="loadStatus"/>
    <style>
        .errorMsg{
        display:none !important;
        }
        @font-face {
            font-family: 'ProximaNovaSoft-Regular';
            font-weight: normal;
            font-style: normal;
            
            src: url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.eot')}');
            src: url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.eot')}?#iefix') format('embedded-opentype'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.woff')}') format('woff'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.ttf')}') format('truetype'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.svg')}#proxima_nova_softregular') format('svg');
        }
        @font-face {
            font-family: 'ProximaNovaSoft-Medium';
            font-weight: normal;
            font-style: normal;
            src: url('../fonts/proximanovasoft-regular.eot');
            src: url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.eot')}?#iefix') format('embedded-opentype'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.woff')}') format('woff'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.ttf')}') format('truetype'), url('{!URLFOR($Resource.fonts, 'proximanovasoft-regular.svg')}#proxima_nova_softmedium') format('svg');
        }
        @font-face {
            font-family: 'icomoon';        
            src: url('{!URLFOR($Resource.fonts, 'icon-utility.eot')}');
        }      
        @font-face {
            font-family: 'icomoon';
            src: url("{!URLFOR($Resource.fonts, 'icon-utility.eot')}?#iefix") format("embedded-opentype"), url("{!URLFOR($Resource.fonts, 'icon-utility.woff')}") format("woff"), url("{!URLFOR($Resource.fonts, 'icon-utility.ttf')}") format("truetype"), url("{!URLFOR($Resource.fonts, 'icon-utility.svg')}#icomoon") format("svg");
            font-weight: normal;
            font-style: normal;
        }
        
        @media (max-width: 500px) {
        
            .bootstrap-sf1 .form-horizontal .form-group {
                margin-left: -10px;
                margin-right: -10px;
            }
            .bootstrap-sf1{
                overflow: hidden;
            }
            .bootstrap-sf1 .container{
                padding-left :0px;
                padding-right:0px;
            }
            .bootstrap-sf1 {
                position: relative;
                padding-top: 14px;
                //margin: -15px -15px 10px -15px;
            }
            .bootstrap-sf1{
                background-color: #FFF;
            }
            
        }
        
        li {
            text-align:left !important;
        }
        
        

    </style>
    
    <!-- svg loader style -->
        <style>
            .Indicator{
            /*position : relative;*/
            }
            .Indicator.hidden {
            display: none;
            }
            .Indicator .modal-glass {
            background-color: #000000;
            bottom: 0;
            display: block;
            left: 0;
            margin-left: 0px;
            opacity: 0.3;
            position: fixed;
            right: 0;
            top: 0;
            height : 100%;
            z-index: 1999;
            
            }            
            .Indicator .hideEl {
            display: none;
            }
            .Indicator .indicatorContainer {
            background: none repeat scroll 0 0 #354452;
            border-radius: 5px;
            color: #FFFFFF;
            display: block;
            height: 82px;
            left: 0;
            margin: -65px auto;
            opacity: 0.9;
            padding-top: 22px;
            position: fixed;
            right: 0;
            text-align: center;
            top: 250px;
            width: 110px;
            z-index: 2000;
            }
            
            /*
            Set the color of the icon
            */
            svg path,
            svg rect {
            fill: #2A94D6;
            }
            
        </style>
    
</head>

<body>
    <div class="bootstrap-sf1">
        <div class="container">
            <div class="page-header page-header-anchor context-c-bigtop">
                <div class="container">
                    <h1>Transfer to Branch</h1>
                </div>
            </div>
            
            <apex:Form id="theForm" styleClass="form-horizontal">
                <apex:outputPanel id="statusMessage">
    		<apex:pageMessages ></apex:pageMessages>
    	</apex:outputPanel>
                <apex:outputPanel rendered="{!isValid}">

                <header class="navbar navbar-default" role="navigation">
                    <div class="container panel-heading">
                        <div class="navbar-header ">
                            <a data-toggle="collapse" aria-expanded="true" href="#collapse1" class="navbar-brand navbar-foundation-logo">
                              Referral  Information
                            </a>
                        </div>
                    </div>
                </header>
                

                <div class="card collapse in panel-collapse" id="collapse1">
                    <div class="card-detail">
                        <div class="row">                         
                            <div class="col-md-12" >
                            	<span style="color:red">*</span>
                            	<apex:outputLabel value="{!$ObjectType.RTL_Referral__c.fields.RTL_Interested_Product__c.Label}"
                                        style="text-align: center;vertical-align: middle;"
                                        /> 
                            	
                                <c:multiselectpicklist leftlabel="Available"
                                   leftoption="{!interestedProductList}"
                                   rightlabel="Chosen"
                                   rightoption="{!interestedProductSelectedList}"
                                   size="5" width="150px" >
                    			</c:multiselectpicklist>       
                            </div>                            
                        </div>
                    </div>
                </div>
                </apex:outputPanel>
                <div class="text-center" style="margin-bottom:10px">
               	         <apex:commandButton value="Save" action="{!saveMobile}" rendered="{!isValid}" styleclass="btn-lg btn-default" 
                                            status="Status1"/>
                        &nbsp;
                        <apex:commandButton value="Cancel" onclick="sforce.one.navigateToSObject('{!referral.Id}');return false;" 
                                            styleclass="btn-lg btn-default" 
                                            rendered="{!isValid}"/>
                        <apex:commandButton value="Back" onclick="sforce.one.navigateToSObject('{!referral.Id}');return false;"
                                            styleclass="btn-lg btn-default" 
                                            rendered="{!!isValid}"/>
                </div>
               
                    
            </apex:Form>
        </div>
    </div>
    
     <!-- /Loadding ajax -->
        <div id="loadingImage" class="Indicator">
            <div class="modal-glass">&nbsp;</div>
            <div class="indicatorContainer" role="alert">
                <div class="loader" title="0">
                    <svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve">
                        <path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946
                                                           s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634
                                                           c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z">
                        </path>
                        <path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0
                                             C22.32,8.481,24.301,9.057,26.013,10.047z">
                            <animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 20 20" to="360 20 20" dur="0.5s" repeatCount="indefinite">
                            </animateTransform>
                        </path>
                    </svg>
                </div>
                <div id="Indicator-message">Loading ...</div>
            </div>
        </div>
        <!-- Loadding ajax --> 

 <script type="text/javascript">
    $j = jQuery.noConflict();
    $j(document).ready(function () {
        setTimeout(function(){ 
        	
        	sfView.onComplete(); 
        }, 2000);   
    });

    
    var sfView = (function() {
    	var indicator =  $j("#loadingImage");
		var msg = $j("#Indicator-message");
		// All functions now have direct access to each other
        var onProcess = function(strmessage) { 
        	msg.text(strmessage);
            indicator.removeClass('hidden');
        };
        var onComplete = function() {
        	indicator.addClass('hidden');
        };      
        // Return the object that is assigned to Module
        return {
        	onProcess: onProcess,
        	onComplete: onComplete
        };
    }());
 
   
    function startLoading(text){
    	sfView.onProcess(text);
    }
    function endLoading(){
    	sfView.onComplete();
    }    
    
    
    function noenter(ev)  {
    	if (window.event && window.event.keyCode == 13 || ev.which == 13) {
    		save();
        	return false;
    	} else {
    		return true;
    	}
    }  
    
    function save(){
    	doSave();
    } 
    
    
    function callViewPage(){
		endLoading();                         
    }
    
  	function cancelRedirect(){          
    	startLoading('Loading ...');
        // Go back to the Account detail page
        if( (typeof sforce != 'undefined') && (sforce != null) ) {
        	sforce.one.navigateToURL('/a0A');
        }
    }   
        
</script>  
  
</body>

</apex:page>